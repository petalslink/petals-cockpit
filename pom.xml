<!--
 Copyright (C) 2016-2017 Linagora

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Affero General Public License as
 published by the Free Software Foundation, either version 3 of the
 License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Affero General Public License for more details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see http://www.gnu.org/licenses/.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ow2.petals</groupId>
  <artifactId>petals-cockpit-parent</artifactId>
  <version>0.9.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <prerequisites>
    <maven>3.0</maven>
  </prerequisites>

  <properties>
    <java-version>1.8</java-version>
    <maven.compiler.source>${java-version}</maven.compiler.source>
    <maven.compiler.target>${java-version}</maven.compiler.target>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Provided by dependency:properties -->
    <quasar.path>${co.paralleluniverse:quasar-core:jar:jdk8}</quasar.path>
    <!-- empty by default (if not, @{argLine} is not replaced in surefire and failsafe -->
    <argLine></argLine>

    <dropwizard.version>1.1.0</dropwizard.version>
    <liquibase.version>3.5.3</liquibase.version>
    <quasar.version>0.7.7</quasar.version>
    <comsat.version>0.7.0</comsat.version>
    <pac4j.version>1.9.6</pac4j.version>
    <h2.version>1.4.194</h2.version>
    <jooq.version>3.9.1</jooq.version>
    <petals-admin.version>2.0.0-SNAPSHOT</petals-admin.version>
    <petals-jmx-api.version>1.1.0-SNAPSHOT</petals-jmx-api.version>
    <enunciate.version>2.9.1</enunciate.version>
  </properties>

  <modules>
    <module>backend</module>
    <module>cockpit</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- dependency>
        <groupId>cz.jirutka.maven</groupId>
        <artifactId>jetty-bom</artifactId>
        <version>9.3.15.v20161220</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency-->
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>2.25.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-bom</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-core</artifactId>
        <version>${pac4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>21.0</version>
      </dependency>
      <dependency>
        <groupId>io.javaslang</groupId>
        <artifactId>javaslang</artifactId>
        <version>2.0.5</version>
      </dependency>
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>${liquibase.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq</artifactId>
        <version>${jooq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.petals</groupId>
        <artifactId>petals-admin-api</artifactId>
        <version>${petals-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.petals</groupId>
        <artifactId>petals-admin-jmx</artifactId>
        <version>${petals-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.petals</groupId>
        <artifactId>petals-admin-mock</artifactId>
        <version>${petals-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.petals</groupId>
        <artifactId>petals-jmx-api-api</artifactId>
        <version>${petals-jmx-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.petals</groupId>
        <artifactId>petals-jmx-api-impl</artifactId>
        <version>${petals-jmx-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.petals</groupId>
        <artifactId>petals-jmx-api-mock</artifactId>
        <version>${petals-jmx-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jdt</groupId>
        <artifactId>org.eclipse.jdt.annotation</artifactId>
        <version>2.1.0</version>
        <!-- Prevent the dependency from being included in distributions -->
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>co.paralleluniverse</groupId>
        <artifactId>quasar-actors</artifactId>
        <version>${quasar.version}</version>
      </dependency>
      <dependency>
        <groupId>co.paralleluniverse</groupId>
        <artifactId>quasar-core</artifactId>
        <version>${quasar.version}</version>
        <classifier>jdk8</classifier>
      </dependency>
      <dependency>
        <groupId>org.zapodot</groupId>
        <artifactId>embedded-db-junit</artifactId>
        <version>1.0-RC1</version>
      </dependency>
      <dependency>
        <groupId>org.zapodot</groupId>
        <artifactId>embedded-db-junit-liquibase</artifactId>
        <version>1.0-RC1</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.6.2</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-db</artifactId>
        <version>1.1.1</version>
      </dependency>
        <dependency>
        <groupId>com.webcohesion.enunciate</groupId>
        <artifactId>enunciate-core-annotations</artifactId>
        <version>${enunciate.version}</version>
        <!-- Prevent the dependency from being included in distributions -->
        <scope>provided</scope>
      </dependency>
      <dependency>
        <!-- force version because of quasar-core -->
        <groupId>org.hdrhistogram</groupId>
        <artifactId>HdrHistogram</artifactId>
        <version>2.1.9</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <!-- Let's use a version with similar (1.x) byte-buddy version than quasar -->
        <version>2.7.19</version>
      </dependency>
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <!-- Let's use latest 1.x version -->
        <version>1.6.12</version>
      </dependency>
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy-agent</artifactId>
        <!-- Let's use latest 1.x version -->
        <version>1.6.12</version>
      </dependency>
      <dependency>
        <!-- force version because of quasar, mockito and dropwizard-testing -->
        <groupId>org.objenesis</groupId>
        <artifactId>objenesis</artifactId>
        <version>2.5.1</version>
      </dependency>
      <dependency>
        <!-- force version because of dropwizard-bom and embedded-db-junit -->
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4.1</version>
        <executions>
          <execution>
            <id>enforce</id>
            <configuration>
              <rules>
                <dependencyConvergence />
                <banCircularDependencies />
                <requireUpperBoundDeps />
                <requireJavaVersion>
                  <version>[${java-version},)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>enforce-no-duplicate-classes</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
              <printEqualFiles>true</printEqualFiles>
              <ignoredResourcePatterns>
                <ignoredResourcePattern>^about\.html$</ignoredResourcePattern>
                <ignoredResourcePattern>^versioneye\.properties$</ignoredResourcePattern>
              </ignoredResourcePatterns>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <!-- Needed for surefire -->
              <goal>properties</goal>
              <!-- Only for information -->
              <goal>analyze-only</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <executions>
          <execution>
            <id>check-header</id>
            <!-- let's do it at validate to prevent generated sources to be covered -->
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <configLocation>petals-checkstyle-rules.xml</configLocation>
              <headerLocation>petals-copyright-agpl3-regexp-file.txt</headerLocation>

              <consoleOutput>true</consoleOutput>
              <logViolationsToConsole>true</logViolationsToConsole>

              <includeResources>true</includeResources>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <includeTestResources>true</includeTestResources>
              <includes>**/*</includes>
              <resourceIncludes>**/*</resourceIncludes>
              <!--
                  We exclude following resources:
                   - JAR, class, ZIP, other binary files and log files used for unit tests
                   - Licence and note files
                   - Man pages sources
                   - Keystores, certificate, keys
                   - Images
               -->
              <resourceExcludes>**/*.jar,**/*.class,**/*.zip,**/*.bin,**/LICENSE.txt,**/NOTE,**/*.log,**/*_provideFlowStepBegin.xml,**/*_provideFlowStepEnd.xml,**/*_provideFlowStepFailure.xml,**/man1/*.1,**/man5/*.5,**/man7/*.7,**/*.jks,**/id_rsa*,**/known_hosts,**/*.jpg,**/*.png,**/*.crt,**/*.pem,META-INF/**,**/*.json,**/*.yml,**/*.yaml</resourceExcludes>
            </configuration>
          </execution>
          <execution>
            <id>check-other-source-files</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <configLocation>petals-checkstyle-rules.xml</configLocation>
              <headerLocation>petals-copyright-agpl3-regexp-file.txt</headerLocation>

              <consoleOutput>true</consoleOutput>
              <logViolationsToConsole>true</logViolationsToConsole>

              <sourceDirectory>${basedir}</sourceDirectory>
              <includes>/pom.xml</includes>
              <includeResources>false</includeResources>
              <includeTestSourceDirectory>false</includeTestSourceDirectory>
              <includeTestResources>false</includeTestResources>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.ow2.petals</groupId>
            <artifactId>petals-checkstyle-rules</artifactId>
            <version>1.0.4-SNAPSHOT</version>
          </dependency>
          <dependency>
            <!-- Latest version -->
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>7.5.1</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.9</version>
          <executions>
            <execution>
            <!-- This activates the use of jacoco for recording unit and integration test coverage -->
              <id>jacoco-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>
            <execution>
            <!-- This will generate XML and HTML reports -->
              <id>jacoco-report</id>
              <goals>
                <goal>report</goal>
                <goal>report-integration</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <argLine>@{argLine} -javaagent:${quasar.path}</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <argLine>@{argLine} -javaagent:${quasar.path}</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.5.0</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.10,)</versionRange>
                    <goals>
                      <goal>properties</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-toolchains-plugin</artifactId>
                    <versionRange>[1.1,)</versionRange>
                    <goals>
                      <goal>toolchain</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <versionRange>[2.17,)</versionRange>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
