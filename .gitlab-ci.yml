# Notes
# Branch front/* will run test-frontend
# Branch back/* will run build-backend
# Branch product/* will run build-backend, build-frontend, package-product, e2e-product
# Branch master will run build-backend, build-frontend, build-frontend-pages, test-frontend, package-product-master, e2e-product, pages
# Other branches will run build-backend, build-frontend, package-product, e2e-product
# Tags will run build-backend, build-frontend, release-product

stages:
  - build
  - package
  - integration

variables:
  # it is also referenced in ci/settings.xml
  M2_STAGING_DIRECTORY: staging
  M2_CACHED_REPOSITORY: m2cache
  YARN_CACHE_DIRECTORY: yarncache

.mvn-java-8: &mvn-java-8
  image: maven:3.5-jdk-8-alpine
  before_script:
    - source ci/mvn-helpers.sh
  after_script:
    - source ci/mvn-helpers.sh
    - maven ch.ringler.tools:m2cachecleanup:1.0.4:cleanup-cache
  cache:
    key: mvn-java-8
    paths:
      - $M2_CACHED_REPOSITORY

.node-6: &node-java-yarn
  image: registry.gitlab.com/victornoel/node-java-yarn-docker:n7-j8
  before_script:
    # see https://github.com/yarnpkg/yarn/issues/986 or https://github.com/yarnpkg/yarn/issues/988 for optimizing
    - yarn config set cache-folder $PWD/$YARN_CACHE_DIRECTORY --global
    # because of https://github.com/yarnpkg/yarn/issues/2629 (fixed in 0.24)
    - yarn config set network-concurrency 1
    - du -hs $PWD/$YARN_CACHE_DIRECTORY || true
    - cd frontend
    - export PATH=`yarn bin`:$PATH
    # because of https://github.com/yarnpkg/yarn/issues/2629 (fixed in 0.24)
    - time yarn --frozen-lockfile --link-duplicates --non-interactive || yarn --frozen-lockfile --link-duplicates --non-interactive
    - du -hs node_modules || true
    - cd ..
  cache:
    key: node-yarn
    paths:
      - $YARN_CACHE_DIRECTORY

pages:
  image: alpine:3.5
  variables:
    GIT_STRATEGY: none
  stage: package
  allow_failure: true
  only:
    # pages are only built and deployed from master
    - master
  dependencies:
    - build-backend
    - build-frontend-pages
  script:
    - mv frontend-demo public
    - mv backend-apidocs public/apidocs
  artifacts:
    expire_in: 1 day
    paths:
      - public

build-backend:
  <<: *mvn-java-8
  stage: build
  except:
    # we don't want to build nor test the backend in front/*
    - /^front\/.*$/
  script:
    # let's lock the version used for SNAPSHOT dependencies to
    # ensure they are the same in the other jobs
    - maven -pl backend -am versions:lock-snapshots
    # deploy to the staging directory
    - maven_build -pl backend -am deploy
    # build the docs
    - maven -pl backend -am com.webcohesion.enunciate:enunciate-slim-maven-plugin:docs && mv backend/target/site/apidocs backend-apidocs || true # this can fail
  artifacts:
    expire_in: 1 week
    paths:
      - backend-apidocs
      - $M2_STAGING_DIRECTORY

test-frontend:
  <<: *node-java-yarn
  stage: build
  except:
    # we don't want to test the frontend in back/* and product/*
    - /^back\/.*$/
    - /^product\/.*$/
  script:
    - cd frontend
    # copyright and lint
    - time yarn run check
    # unit tests
    - time yarn run test:ci
    # e2e
    - time ../ci/xrun.sh ../ci/wmrun.sh yarn run e2e:ci

build-frontend:
  <<: *node-java-yarn
  stage: build
  except:
    # we don't want to build the frontend, only test it (with test-frontend) in front/*
    - /^front\/.*$/
    # we don't want to build the frontend in back/*
    - /^back\/.*$/
  script:
    - cd frontend
    # build the final frontend for the product
    - time yarn run build:product:ci && mv dist ../frontend-dist
  artifacts:
    expire_in: 1 week
    paths:
      - frontend-dist

build-frontend-pages:
  <<: *node-java-yarn
  stage: build
  only:
    # pages are only built and deployed from master
    - master
  script:
    - cd frontend
    # build the demo for the gitlab pages
    - time yarn run build:demo:ci && mv dist ../frontend-demo || true # this can fail
  artifacts:
    expire_in: 1 day
    paths:
      - frontend-demo

.build-product: &build-product
  <<: *mvn-java-8
  stage: package
  dependencies:
    - build-backend
    - build-frontend
  script:
    - mv frontend-dist frontend/dist
    - maven dependency:purge-local-repository --non-recursive -DmanualInclude="org.ow2.petals:petals-cockpit-server,org.ow2.petals:petals-cockpit-parent" -DreResolve=false -DsnapshotsOnly=true
    - maven -pl cockpit verify antrun:run@build-product-dist
    - export COCKPIT_VERSION=`ls cockpit/target/petals-cockpit-*-capsule.jar | sed -E 's/.*petals-cockpit-(.*)-capsule.jar/\1/'`
    # see https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/1664
    - echo $COCKPIT_VERSION > version.txt
    - mv cockpit/target/dist petals-cockpit-$COCKPIT_VERSION

release-product:
  <<: *build-product
  only:
    - tags
  artifacts:
    name: petals-cockpit-$(cat version.txt)
    paths:
      - petals-cockpit-*

package-product-master:
  <<: *build-product
  only:
    - master
  artifacts:
    name: petals-cockpit-$(cat version.txt)-${CI_BUILD_REF:0:7}
    paths:
      - petals-cockpit-*

package-product:
  <<: *build-product
  except:
    # covered by package-product-master
    - master
    # covered by release-product
    - tags
    # we don't want to build the final product in front/* and back/*
    - /^front\/.*$/
    - /^back\/.*$/
  artifacts:
    expire_in: 1 week
    name: petals-cockpit-$(cat version.txt)-${CI_BUILD_REF:0:7}
    paths:
      - petals-cockpit-*

e2e-product:
  <<: *node-java-yarn
  stage: integration
  except:
    - tags
    # we don't want to test the final product in front/* and back/*
    - /^front\/.*$/
    - /^back\/.*$/
  dependencies:
    # one or the other
    - package-product
    - package-product-master
  variables:
    COCKPIT_CONFIG: e2e/default.yml
  script:
    # TODO reuse script?
    - export JAR=$(ls -1 petals-cockpit-*/lib/petals-cockpit-*.jar 2>/dev/null)
    - export COCKPIT="java -jar $JAR"
    - time $COCKPIT db migrate $COCKPIT_CONFIG --migrations e2e/migrations.xml
    - nohup $COCKPIT server $COCKPIT_CONFIG &
    - cd frontend
    # TODO the exclude does not work, see https://github.com/angular/angular-cli/issues/5172
    - time ../ci/xrun.sh ../ci/wmrun.sh yarn run e2e:product
